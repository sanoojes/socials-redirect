import { serve } from "bun";
import { MongoClient } from "mongodb";

const client = new MongoClient(Bun.env.MONGO_URI??"");
await client.connect();
const db = client.db("socialLinksDB");
const collection = db.collection("counters");

const redirects: Record<string, string> = {
  "/telegram": "https://t.me/sanoojes",
  "/github": "https://github.com/sanoojes",
  "/twitter": "https://twitter.com/sanoojes",
  "/instagram": "https://instagram.com/sanooj.es",
  "/linkedin": "https://linkedin.com/in/sanooj-e-sanish",
  "/discord": "https://discordapp.com/users/821653196161679371",
  "/spotify": "https://open.spotify.com/user/31c4rwp3i4gumuyuilvb5ds3midm",
};

function generateLinks() {
  return Object.keys(redirects)
    .map(
      (path) =>
        `<li><a href="${path}">${
          path.slice(1).charAt(0).toUpperCase() + path.slice(2)
        }</a></li>`
    )
    .join("\n");
}

const html = `<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="description" content="Social links for Sanooj. Connect on Discord, Twitter, Instagram, LinkedIn, and more.">
  <meta name="robots" content="index, follow">
  <title>Social Links for Sanooj</title>
  <style>
    body { font-family: Arial, sans-serif; display: flex; flex-direction: column; justify-content: center; align-items: center; min-height: 100vh; margin: 0; text-align: center; background-color: #000; color: #fafafa; }
    h1 { margin-bottom: 1rem; }
    ul { list-style: none; padding: 0; }
    li { margin: 0.5rem 0; }
    a { color: #0077cc; text-decoration: none; font-weight: bold; }
    a:hover { text-decoration: underline; }
  </style>
</head>
<body>
  <h1>Social Links for Sanooj</h1>
  <ul>
    ${generateLinks()}
  </ul>
</body>
</html>`;

serve({
  port: Bun.env?.PORT ?? 3000,
  async fetch(req) {
    const url = new URL(req.url);

    if (url.pathname === "/robots.txt") {
      return new Response("User-agent: *\nDisallow:", {
        status: 200,
        headers: { "Content-Type": "text/plain" },
      });
    }

    const target = redirects[url.pathname];
    if (target) {
      await collection.updateOne(
        { path: url.pathname },
        { $inc: { count: 1 } },
        { upsert: true }
      );

      return new Response(null, {
        status: 301,
        headers: { Location: target },
      });
    }

    return new Response(html, {
      status: 200,
      headers: { "Content-Type": "text/html" },
    });
  },
});

console.log("Social links server running on port 3000");
